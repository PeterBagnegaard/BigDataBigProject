import torch
import numpy as np
from torch_geometric.data import Data

def Create_Graph(sequential, scalar, event_numbers):
    # Data to store in events
    features = ['dom_x','dom_y','dom_z','dom_charge','dom_time']
    targets  = ['true_primary_energy'    , 'true_primary_time'       , 
               'true_primary_position_x' , 'true_primary_position_y' , 'true_primary_position_z', 
               'true_primary_direction_x', 'true_primary_direction_y', 'true_primary_direction_z']
        
    res = list()
    for event_number in event_numbers:
        # Pick event data
        x = sequential[sequential['event_no'] == event_number][features]
        y = scalar[scalar['event_no'] == event_number][targets]
        x = torch.tensor(x.values,dtype = torch.float)
        y = torch.tensor(y.values,dtype = torch.float)
        
        # Make connections
        nbr_con = x.shape[0]
        from_node = list(np.arange(nbr_con))
#        to_node = list(np.arange(1, nbr_con+1))
        to_node = list(np.arange(1, nbr_con))
        upper = from_node + to_node
        lower = to_node + from_node
        edge_index = torch.tensor([upper, lower], dtype = torch.long)
        
        # Append graph of event
        res.append(Data(x=x, y=y, edge_index=edge_index))
    return res
